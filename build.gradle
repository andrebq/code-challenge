buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'info.amoraes.n26'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


// google formatter tasks
configurations {
	format
}

dependencies {
	format('com.google.googlejavaformat:google-java-format:1.4')
}

task downloadFormat(type: Copy) {
	from configurations.format
	into "$buildDir/format"
}

task runFormat(type: JavaExec) {
	def mainJavaFiles = sourceSets.main.allJava.files
	mainJavaFiles.removeIf { file -> file.name.endsWith('module-info.java') }

	classpath = fileTree(dir: "$buildDir/format", include: '*.jar')

	main 'com.google.googlejavaformat.java.Main'
	args '--replace'
	args mainJavaFiles
	args sourceSets.test.allJava.files
}
runFormat.dependsOn downloadFormat
